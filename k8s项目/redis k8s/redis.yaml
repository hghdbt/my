apiVersion: v1
kind: Service
metadata:
  name: redis
  namespace: dev
  labels:
    app: redis
spec:
  selector:
    app: redis
  ports:
    - protocol: TCP
      port: 6379
      #targetPort: 6379
  clusterIP: None
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: redis
  namespace: dev
  labels:
    app: redis
spec:
  serviceName: "redis"
  replicas: 6
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
    spec:
      containers:
      - name: redis
        image: redis:v1
        ports:
        - containerPort: 6379
          name: redis
          protocol: TCP
        - containerPort: 16379
          name: cluster
          protocol: TCP
        resources:
          limits:
            cpu: 100m
            memory: 300Mi
          requests:
            cpu: 100m
            memory: 300Mi
        livenessProbe:
          tcpSocket:
            port: 6379
          initialDelaySeconds: 5
          timeoutSeconds: 1
        readinessProbe:
          tcpSocket:
            port: 6379
        volumeMounts:
          - name: dir
            mountPath: /conf
          - name: data 
            mountPath: /data
      volumes:
        - name: dir
          configMap:
            name: redis
            items:
            - key: redis.conf
              path: "redis.conf"
  volumeClaimTemplates:   # pvc 模板 更具pod创建pvc   # 事先需生成pv
    - metadata:
        name: data
        namespace: dev
      spec:
        accessModes: [ "ReadWriteOnce" ]
        resources:
          requests:
            storage: 5Gi
